package seclogin.math;

import seclogin.Crypto;

import javax.crypto.SecretKey;
import java.math.BigInteger;

/**
 * A pseudorandom function family over Z_q:
 * AES with key generated by PBKDF2-HMAC-SHA1 from the provided salt and password.
 */
public class G {

    private final SecretKey key;
    private final Zq zq;

    private G(SecretKey key, Zq zq) {
        this.key = key;
        this.zq = zq;
    }

    public static G forSaltedPassword(byte[] salt, String password, Zq zq) {
        return new G(Crypto.deriveAes128Key(salt, password.toCharArray()), zq);
    }

    public BigInteger of(int input) {
        return new BigInteger(Crypto.aes128Encrypt(key, BigInteger.valueOf(input).toByteArray())).mod(zq.q);
    }
}
